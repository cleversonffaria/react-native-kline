/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, {Component} from 'react';
import {StyleSheet, Text, SafeAreaView, View, ScrollView} from 'react-native';
import ByronKlineChart from '../';
import {dispatchByronKline, KLineIndicator} from '../';
import axios from 'axios';

export default class App extends Component {
  state = {
    list: [],
    darkTheme: false,
  };

  onMoreKLineData = (params) => {
    console.log(params);
  };

  async initKlineChart() {
    const res = await axios
      .get(
        'https://www.okex.com/priapi/v5/market/candles?instId=BTC-USDT&bar=1m&limit=1000',
      )
      .catch((err) => {
        console.log(err);
        return;
      });

    if (!res || !res.data || !res.data.data || !res.data.data.length) {
      return;
    }
    const list = [];
    for (let i = 0; i < res.data.data.length; i++) {
      const item = res.data.data[i];
      list.push({
        amount: 0,
        open: Number(item[1]),
        close: Number(item[4]),
        high: Number(item[2]),
        id: parseInt(Number(item[0]) / 1000),
        low: Number(item[3]),
        vol: Number(item[5]),
      });
    }
    list.sort((l, r) => (l.id > r.id ? 1 : -1));
    this.setState({list});
    this.subscribeKLine();
  }

  subscribeKLine() {
    const ws = new WebSocket('wss://wspri.okex.com:8443/ws/v5/public');
    ws.onopen = () => {
      ws.send(
        JSON.stringify({
          op: 'subscribe',
          args: [{channel: 'candle1m', instId: 'BTC-USDT'}],
        }),
      );
    };
    ws.onmessage = (ev) => {
      try {
        const data = JSON.parse(ev.data);
        const item = data.data[0];
        dispatchByronKline('update', [
          {
            amount: 0,
            open: Number(item[1]),
            close: Number(item[4]),
            high: Number(item[2]),
            id: parseInt(Number(item[0]) / 1000),
            low: Number(item[3]),
            vol: Number(item[5]),
          },
        ]);
      } catch (err) {}
    };
  }

  componentDidMount() {
    this.initKlineChart();
  }

  render() {
    return (
      <SafeAreaView style={styles.container}>
        <View style={{height: 500}}>
          {(this.state.darkTheme && (
            <ByronKlineChart
              style={{flex: 1}}
              datas={this.state.list}
              onMoreKLineData={this.onMoreKLineData}
              indicators={[KLineIndicator.TimeLineShow]}
              mainBackgroundColor="#262626"
              gridLineColor="#2F2F2F"
              lineWidth={4}
              limitTextColor="#ffffff"
              labelTextColor="#ffffff"
              commonTextSize={35}
              labelTextSize={35}
              // Label de Hora
              selectedXLabelBorderColor="#333333"
              selectedXLabelBackgroundColor="#333333"
              selectedLabelTextColor="#ffffff"
              selectedDateBoxVerticalPadding={10}
              // Linhas
              selectedYLineColor="#4003A99C"
              selectedXLineColor="#03A99C"
              selectedCrossPointRadius={5}
              selectedCrossPointColor="#03A99C"
              selectedYLineWidth={2}
              priceLineColor="#D6FFFF"
              // Label de Preço
              priceLabelRightBackgroundColor="#D6FFFF"
              priceLabelRightTextColor="#03A99C"
              priceLineRightColor="#D6FFFF"
              // Timeline - Chart Line
              timeLineEndPointColor="#00DDCC"
              timeLineColor="#00DDCC"
              timeLineFillTopColor="#5000DDCC"
              timeLineEndRadius={4}
              // Box de informações
              selectedInfoBoxTextColor="#f3f3f3"
              selectedInfoBoxBorderColor="#2F2F2F"
              selectedInfoBoxBackgroundColor={'#2F2F2F'}
              selectedInfoTextSize={35}
              selectedInfoBoxPadding={30}
              locales={[
                'Data   ',
                'Abertura',
                'Máximo',
                'Mínimo',
                'Fechamento',
                'Variação',
                'Amplitude',
                'Volume',
              ]}
            />
          )) || (
            <ByronKlineChart
              style={{flex: 1}}
              datas={this.state.list}
              onMoreKLineData={this.onMoreKLineData}
              indicators={[KLineIndicator.TimeLineShow]}
              mainBackgroundColor="#ffffff"
              gridLineColor="#f3f3f3"
              lineWidth={3}
              limitTextColor="#333333"
              labelTextColor="#333333"
              // Label de Hora
              selectedXLabelBorderColor="#333333"
              selectedXLabelBackgroundColor="#333333"
              selectedLabelTextColor="#ffffff"
              selectedDateBoxVerticalPadding={10}
              // Linhas
              selectedYLineColor="#E5D9FB"
              selectedXLineColor="#7632e2"
              selectedCrossPointRadius={5}
              selectedCrossPointColor="#7632e2"
              selectedYLineWidth={2}
              priceLineColor="#7632e2"
              // Label de Preço
              priceLabelRightBackgroundColor="#E5D9FB"
              priceLabelRightTextColor="#7632e2"
              priceLineRightColor="#7632e2"
              // Timeline - Chart Line
              timeLineEndPointColor="#AC77FF"
              timeLineColor="#AC77FF"
              timeLineFillTopColor="#EFE8FB"
              timeLineEndRadius={4}
              // Box de informações
              selectedInfoBoxTextColor="#333333"
              selectedInfoBoxBorderColor="#f3f3f3"
              selectedInfoBoxBackgroundColor={'#ffffff'}
              selectedInfoTextSize={35}
              selectedInfoBoxPadding={30}
              locales={[
                'Data   ',
                'Abertura',
                'Máximo',
                'Mínimo',
                'Fechamento',
                'Variação',
                'Amplitude',
                'Volume',
              ]}
              // TESTE
              yLabelAlign={true}
              priceLabelInLineTextColor="red"
              priceLabelInLineBoxBackgroundColor="red"
              selectedPriceBoxBackgroundColor="red"
            />
          )}
        </View>
      </SafeAreaView>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#262626',
    justifyContent: 'center',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
});

/*
ANDROID

{(this.state.darkTheme && (
  <ByronKlineChart
    style={{flex: 1}}
    datas={this.state.list}
    onMoreKLineData={this.onMoreKLineData}
    indicators={[KLineIndicator.TimeLineShow]}
    mainBackgroundColor="#262626"
    gridLineColor="#2F2F2F"
    lineWidth={4}
    limitTextColor="#ffffff"
    labelTextColor="#ffffff"
    commonTextSize={35}
    labelTextSize={35}
    // Label de Hora
    selectedXLabelBorderColor="#333333"
    selectedXLabelBackgroundColor="#333333"
    selectedLabelTextColor="#ffffff"
    selectedDateBoxVerticalPadding={10}
    // Linhas
    selectedYLineColor="#4003A99C"
    selectedXLineColor="#03A99C"
    selectedCrossPointRadius={5}
    selectedCrossPointColor="#03A99C"
    selectedYLineWidth={2}
    priceLineColor="#D6FFFF"
    // Label de Preço
    priceLabelRightBackgroundColor="#D6FFFF"
    priceLabelRightTextColor="#03A99C"
    priceLineRightColor="#D6FFFF"
    // Timeline - Chart Line
    timeLineEndPointColor="#00DDCC"
    timeLineColor="#00DDCC"
    timeLineFillTopColor="#5000DDCC"
    timeLineEndRadius={4}
    // Box de informações
    selectedInfoBoxTextColor="#f3f3f3"
    selectedInfoBoxBorderColor="#2F2F2F"
    selectedInfoBoxBackgroundColor={'#2F2F2F'}
    selectedInfoTextSize={35}
    selectedInfoBoxPadding={30}
    locales={[
      'Data   ',
      'Abertura',
      'Máximo',
      'Mínimo',
      'Fechamento',
      'Variação',
      'Amplitude',
      'Volume',
    ]}
  />
)) || (
  <ByronKlineChart
    style={{flex: 1}}
    datas={this.state.list}
    onMoreKLineData={this.onMoreKLineData}
    indicators={[KLineIndicator.TimeLineHide]}
    mainBackgroundColor="#ffffff"
    gridLineColor="#f3f3f3"
    lineWidth={3}
    limitTextColor="#333333"
    labelTextColor="#333333"
    // Label de Hora
    selectedXLabelBorderColor="#333333"
    selectedXLabelBackgroundColor="#333333"
    selectedLabelTextColor="#ffffff"
    selectedDateBoxVerticalPadding={10}
    // Linhas
    selectedYLineColor="#E5D9FB"
    selectedXLineColor="#7632e2"
    selectedCrossPointRadius={5}
    selectedCrossPointColor="#7632e2"
    selectedYLineWidth={2}
    priceLineColor="#7632e2"
    // Label de Preço
    priceLabelRightBackgroundColor="#E5D9FB"
    priceLabelRightTextColor="#7632e2"
    priceLineRightColor="#7632e2"
    // Timeline - Chart Line
    timeLineEndPointColor="#AC77FF"
    timeLineColor="#AC77FF"
    timeLineFillTopColor="#EFE8FB"
    timeLineEndRadius={4}
    // Box de informações
    selectedInfoBoxTextColor="#333333"
    selectedInfoBoxBorderColor="#f3f3f3"
    selectedInfoBoxBackgroundColor={'#ffffff'}
    selectedInfoTextSize={35}
    selectedInfoBoxPadding={30}
    locales={[
      'Data   ',
      'Abertura',
      'Máximo',
      'Mínimo',
      'Fechamento',
      'Variação',
      'Amplitude',
      'Volume',
    ]}
    // TESTE
    yLabelAlign={true}
    priceLabelInLineTextColor="red"
    priceLabelInLineBoxBackgroundColor="red"
    selectedPriceBoxBackgroundColor="red"
  />
)}

*/
